#!/usr/bin/env bash

set -euo pipefail

# Figure out LIB_DIR
if [[ -n "${WORKCLI_LIBEXEC:-}" && -d "$WORKCLI_LIBEXEC" ]]; then
    # Running from Homebrew-installed version
    LIB_DIR="$WORKCLI_LIBEXEC"
else
    # Running locally from repo
    SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
    PROJECT_ROOT="$(cd "$SCRIPT_DIR/.." && pwd)"
    LIB_DIR="$PROJECT_ROOT/lib"
fi
# ensure lib dir exist
if [ ! -d "$LIB_DIR" ]; then
    echo "Library directory '$LIB_DIR' does not exist."
    exit 1
fi

# Source core + command files
# shellcheck disable=SC1091
source "$LIB_DIR/core.sh" # must be first.
# shellcheck disable=SC1091
source "$LIB_DIR/commands-init.sh"
# shellcheck disable=SC1091
source "$LIB_DIR/commands-create.sh"
# shellcheck disable=SC1091
source "$LIB_DIR/commands-finish.sh"
# shellcheck disable=SC1091
source "$LIB_DIR/commands-status.sh"
# shellcheck disable=SC1091
source "$LIB_DIR/commands-start.sh"
# shellcheck disable=SC1091
source "$LIB_DIR/commands-done.sh"
# shellcheck disable=SC1091
source "$LIB_DIR/commands-help.sh"

# Command routing
COMMAND="${1:-help}"
shift || true

# Check for a --verbose flag
VERBOSE=0
for arg in "$@"; do
  if [[ "$arg" == "--verbose" ]]; then
    VERBOSE=1
    break
  fi
done
if [[ $VERBOSE -eq 1 ]]; then
    echo "Verbose mode enabled"
fi

case "$COMMAND" in
  create)  cmd_create "$@" ;;
  done)    cmd_done "$@" ;;
  finish)  cmd_finish "$@" ;;
  help|--help|-h) cmd_help ;;
  init)   cmd_init "$@" ;;
  start)   cmd_start "$@" ;;
  status|st|--status)  cmd_status "$@" ;;
  --version) cmd_version ;;
  *) echo "Unknown command: $COMMAND" && cmd_help && exit 1 ;;
esac
